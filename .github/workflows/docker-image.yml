name: Docker Image CI

on:
  release:
    types: [released]
  push:
    branches:
      - dev
  workflow_dispatch:
    #inputs:
    #  release_tag:
    #    description: ''
    #    required: true
    #    type: string


jobs:
  docker:
    runs-on: ubuntu-latest
    environment: main
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set VER
        run: |
          if [[ ${{ github.event_name == 'workflow_dispatch' }} == true ]]; then
            VER=`sed -n 's/^VERSION = "\([^"]*\)".*/\1/p' ctcontroller/__init__.py`
          elif [[ ${{ github.event_name == 'push' }} == true ]]; then
            VER=latest
            BRANCH=dev
          else
            VER=${{ github.event.release.tag_name }}
            BRANCH=
          fi
          echo "VER=$VER" >> "$GITHUB_ENV"
          echo "BRANCH=$BRANCH" >> "$GITHUB_ENV"
          echo "CTVER=$VER" >> testinfo.txt
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: tapis/ctcontroller:${{ env.VER }}
          build-args: BRANCH=${{ env.BRANCH }}
      - name: Upload test info
        uses: actions/upload-artifact@v3
        with:
          name: testinfo
          path: testinfo.txt
